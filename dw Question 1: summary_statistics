In the PW miniproject we first calculated the total, mean, standard deviation, and quartile statistics of the 'items', 'quantity'', 'nic', and 'act_cost' fields. To do this we had to write some functions to calculate the statistics and apply the functions to our data structure. The DataFrame has a describe method that will calculate most (not all) of these things for us.

Submit the summary statistics to the grader as a list of tuples: [('act_cost', (total, mean, std, q25, median, q75)), ...]

summary = scripts.describe().transpose()

summary

	count 	mean 	std 	min 	25% 	50% 	75% 	max
items 	973193.0 	9.133136 	29.204198 	1.00 	1.00 	2.00 	6.00 	2384.00
nic 	973193.0 	73.058915 	188.070257 	0.00 	7.80 	22.64 	65.00 	16320.00
act_cost 	973193.0 	67.986613 	174.401703 	0.04 	7.33 	21.22 	60.67 	15108.32
quantity 	973193.0 	741.329835 	3665.426958 	0.00 	28.00 	100.00 	350.00 	577720.00

filelds  = ['items', 'quantity', 'nic', 'act_cost']

summary['total'] = summary['count'] * summary['mean']

summary 

	count 	mean 	std 	min 	25% 	50% 	75% 	max 	total
items 	973193.0 	9.133136 	29.204198 	1.00 	1.00 	2.00 	6.00 	2384.00 	8.888304e+06
nic 	973193.0 	73.058915 	188.070257 	0.00 	7.80 	22.64 	65.00 	16320.00 	7.110042e+07
act_cost 	973193.0 	67.986613 	174.401703 	0.04 	7.33 	21.22 	60.67 	15108.32 	6.616410e+07
quantity 	973193.0 	741.329835 	3665.426958 	0.00 	28.00 	100.00 	350.00 	577720.00 	7.214570e+08

summary = summary[['total', 'mean', 'std', 

                  '25%', '50%', '75%']]

summary 

	total 	mean 	std 	25% 	50% 	75%
items 	8.888304e+06 	9.133136 	29.204198 	1.00 	2.00 	6.00
nic 	7.110042e+07 	73.058915 	188.070257 	7.80 	22.64 	65.00
act_cost 	6.616410e+07 	67.986613 	174.401703 	7.33 	21.22 	60.67
quantity 	7.214570e+08 	741.329835 	3665.426958 	28.00 	100.00 	350.00

summary_stats = [(row[0], row[1:])for row in summary.itertuples()]

scripts['items'].sum()

8888304
