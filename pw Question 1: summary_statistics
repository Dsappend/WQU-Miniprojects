Our beneficiary data (scripts) contains quantitative data on the number of items dispensed ('items'), the total quantity of item dispensed ('quantity'), the net cost of the ingredients ('nic'), and the actual cost to the patient ('act_cost'). Whenever working with a new data set, it can be useful to calculate summary statistics to develop a feeling for the volume and character of the data. This makes it easier to spot trends and significant features during further stages of analysis.

Calculate the sum, mean, standard deviation, and quartile statistics for each of these quantities. Format your results for each quantity as a list: [sum, mean, standard deviation, 1st quartile, median, 3rd quartile]. We'll create a tuple with these lists for each quantity as a final result.

test_case = scripts[0:5]

test_case

[{'bnf_code': '0101010G0AAABAB',
  'items': 2,
  'practice': 'N81013',
  'bnf_name': 'Co-Magaldrox_Susp 195mg/220mg/5ml S/F',
  'nic': 5.98,
  'act_cost': 5.56,
  'quantity': 1000},
 {'bnf_code': '0101021B0AAAHAH',
  'items': 1,
  'practice': 'N81013',
  'bnf_name': 'Alginate_Raft-Forming Oral Susp S/F',
  'nic': 1.95,
  'act_cost': 1.82,
  'quantity': 500},
 {'bnf_code': '0101021B0AAALAL',
  'items': 12,
  'practice': 'N81013',
  'bnf_name': 'Sod Algin/Pot Bicarb_Susp S/F',
  'nic': 64.51,
  'act_cost': 59.95,
  'quantity': 6300},
 {'bnf_code': '0101021B0AAAPAP',
  'items': 3,
  'practice': 'N81013',
  'bnf_name': 'Sod Alginate/Pot Bicarb_Tab Chble 500mg',
  'nic': 9.21,
  'act_cost': 8.55,
  'quantity': 180},
 {'bnf_code': '0101021B0BEADAJ',
  'items': 6,
  'practice': 'N81013',
  'bnf_name': 'Gaviscon Infant_Sach 2g (Dual Pack) S/F',
  'nic': 28.92,
  'act_cost': 26.84,
  'quantity': 90}]

sum([script['items']for script in scripts])

4410054

from statistics import stdev

​

def quantile(q, values):

    idx = round(q*len(values))

    return sorted(values)[idx]

​

def describe(key):

    values = [script[key]for script in scripts]

    total = sum(values)

    avg = sum(values) / len(values)

    s = stdev(values)

    q25 = quantile(.25, values)

    med = quantile(.5, values)

    q75 = quantile(.75, values)

​

    return (total, avg, s, q25, med, q75)

describe('items')

(4410054, 11.522744731217633, 33.11220959819492, 1, 3, 8)

summary = [('items', describe('items')),

           ('quantity', describe('quantity')),

           ('nic', describe('nic')),

           ('act_cost', describe('act_cost'))]

summary

[('items', (4410054, 11.522744731217633, 33.11220959819492, 1, 3, 8)),
 ('quantity',
  (316356836, 826.5883059943667, 3872.1860733044696, 30, 120, 466)),
 ('nic',
  (29048309.790000338,
   75.89844899484315,
   197.57308474088757,
   7.7,
   22.62,
   65.94)),
 ('act_cost',
  (27053937.599999707,
   70.68748295124895,
   183.26755837715774,
   7.25,
   21.24,
   61.53))]
